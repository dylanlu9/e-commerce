name: deploy-api
on:
  push:
    paths:
      - "api/**"
      - "!api/README.md"
  workflow_dispatch:
jobs:
  mention-api-deployment:
    runs-on: ubuntu-latest
    steps:
      - run: echo "API deployment."
  prepare-aws-creds-and-config:
    runs-on: ubuntu-latest
    steps:
      - run: mkdir -p config
      - run: printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "${{secrets.AWS_ACCESS_KEY_ID}}" "${{secrets.AWS_SECRET_ACCESS_KEY}}" > config/aws_credentials
      - run: printf "[profile eb-cli]\nregion=${{secrets.AWS_DEV_REGION}}\noutput=json" > config/aws_config
      - name: Upload AWS credentials file for get-aws-ecr-token job
        uses: actions/upload-artifact@v2
        with:
          name: aws_credentials
          path: config/aws_credentials
      - name: Upload AWS configuration file for get-aws-ecr-token job
        uses: actions/upload-artifact@v2
        with:
          name: aws_config
          path: config/aws_config
  get-aws-ecr-token:
    runs-on: ubuntu-latest
    needs: prepare-aws-creds-and-config
    steps:
      - name: Download the AWS credentials file to use the AWS CLI
        uses: actions/download-artifact@v2
        with:
          name: aws_credentials
      - name: Download the AWS configuration file to use the AWS CLI
        uses: actions/download-artifact@v2
        with:
          name: aws_config
      - run: aws ecr get-login-password --region ${{secrets.AWS_DEV_REGION}} > config/docker_login
      - name: Upload AWS ECR token file
        uses: actions/upload-artifact@v2
        with:
          name: docker_login
          path: config/docker_login
  check-downloaded-token:
    runs-on: ubuntu-latest
    needs: get-aws-ecr-token
    steps:
      - name: Download the AWS ECR token file
        uses: actions/download-artifact@v2
        with:
          name: docker_login
      - run: ls
      - run: cd config
      - run: ls
  